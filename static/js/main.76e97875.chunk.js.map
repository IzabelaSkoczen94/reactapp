{"version":3,"sources":["components/ProductView.js","components/BasketView.js","components/App.js","serviceWorker.js","index.js"],"names":["ProductView","_this","this","react_default","a","createElement","Fragment","id","props","items","map","item","key","className","src","photo","alt","name","price","description","onClick","addItem","React","Component","BasketView","products","deleteItem","App","state","productsArray","basketArray","totalprice","value","newBasketArray","Object","toConsumableArray","filter","el","console","log","setState","parseFloat","includes","alert","prevState","concat","productSortByPriceAscending","e","sortByPriceAscending","sort","b","productSortByPriceDescending","sortByPriceDescending","productSortByortByName","sortByName","localeCompare","handleChange","target","fetch","then","response","status","Error","json","data","_this2","_this3","ref","onChange","placeholder","components_ProductView","components_BasketView","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76e97875.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass ProductView extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"product\"/>\r\n        {this.props.items.map(item => {\r\n          return (\r\n            <div key={item.id} id=\"product\">\r\n            <div className=\"product-box\">\r\n              <div>\r\n                <img className=\"product-box--image\" src={item.photo} alt=\"Logo\" />\r\n              </div>\r\n              <div>\r\n                <h2>{item.name}</h2>\r\n                <pre>{item.price} zl</pre>\r\n                <p>{item.description}</p>\r\n                <button className=\"js-product-add\" item={item} onClick={() => this.props.addItem(item, item.id)}>\r\n                  Dodaj do koszyka\r\n                </button>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductView;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass BasketView extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"cart\" />\r\n        {this.props.products.map(item => {\r\n          return (\r\n            <div key={item.id + 10}>\r\n              <ul className=\"user-cart--list\">\r\n                <li>\r\n                  <button key={item.id} onClick={() => this.props.deleteItem(item.id)}>x</button>\r\n                  {item.id - 1} - {item.name} - {item.price} zl\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BasketView;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProductView from \"./ProductView\";\nimport BasketView from \"./BasketView\";\n//import ProductsSorting from \"./ProductsSorting\";\n\nclass App extends Component {\n  state = {\n    productsArray: [],\n    basketArray: [],\n    totalprice: 0,\n    value: '',\n  };\n\n  deleteItem = (id) => {\n    let newBasketArray = [...this.state.basketArray];\n    newBasketArray = newBasketArray.filter(el => el.id !== id)\n    console.log(newBasketArray);\n    this.setState({\n    basketArray: newBasketArray\n    })\n  }\n\n  addItem = (item) => {\n    let price = parseFloat(item.price);\n\n    if (this.state.basketArray.includes(item)) {\n      alert(\"Wybrany produkt jest juz w koszyku\");\n    }\n    else {\n      this.setState(prevState => ({\n        basketArray: [...prevState.basketArray, item],\n        totalprice: this.state.totalprice + price\n      }));     \n    }\n  }\n\n  productSortByPriceAscending = (e) => {\n    console.log(\"sortowanie po cenie rosnaca\")\n    const sortByPriceAscending = this.state.productsArray.sort((a,b) => a.price - b.price)   \n    this.setState({\n      productsArray: sortByPriceAscending\n    });\n  }\n\n  productSortByPriceDescending = (e) => {\n    console.log(\"sortowanie po cenie malejaca\")\n    const sortByPriceDescending= this.state.productsArray.sort((a,b) => b.price - a.price)   \n    this.setState({\n      productsArray: sortByPriceDescending\n    });\n  }\n\n  productSortByortByName = (e) => {\n    console.log(\"sortowanie po nazwie\")\n    const sortByName = this.state.productsArray.sort((a,b) => a.name.localeCompare(b.name))   \n    this.setState({\n      productsArray: sortByName\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({ value: e.target.value });\n  }\n\n  async componentDidMount() {\n    const API = \"http://private-1c19e-reactlesson.apiary-mock.com/products\";\n    fetch(API)\n      .then(response => {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ productsArray: data });\n      });\n  }\n\n  render() {\n    const items = this.state.productsArray;\n    const products = this.state.basketArray;\n    return (\n      <>\n        <div className=\"App\">\n          <header className=\"header-app\">\n            <img className=\"header-app--logo\" src=\"logo.png\" alt=\"Logo\" />\n            My-shop application\n          </header>\n          <div className=\"container\">\n            <section className=\"product-list\">\n            <button ref=\"namesorting\" className=\"js-sort\" id=\"namesorting\" onClick={e => this.productSortByortByName(e)}>\n              Sortuj po nazwie A-Z\n            </button>\n            <button className=\"js-sort\" id=\"priceascending\" onClick={e => this.productSortByPriceAscending(e)}>\n              Sortuj po cenie rosnaca\n            </button>\n            <button className=\"js-sort\" id=\"pricedescending\" onClick={e => this.productSortByPriceDescending(e)}>\n              Sortuj po cenie malejaca\n            </button>\n              <div className=\"search\">\n                <input value={this.state.value} onChange={this.handleChange}  className=\"search-input\" placeholder=\"Szukaj...\" />\n              </div>\n              <ProductView items={items} addItem={this.addItem} />\n            </section>\n            <section className=\"user-cart\">\n              <h4>Tw√≥j koszyk</h4>\n              <BasketView products={products} deleteItem={this.deleteItem}  />\n              <section className=\"total-price\">{this.state.totalprice} z≈Ç</section>\n            </section>\n          </div>\n          <footer className=\"footer\">Copyright by my-shop - 2018</footer>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}